#!/bin/bash

# Git subcommand to delete all merged branches
#
# `git clean-remote <remote="origin">`

##########################################
# Functions
##########################################
confirm () {
    # call with a prompt string or use a default
    read -r -p "${1:-[y/N]} " response
    case $response in
        [yY][eE][sS]|[yY])
            true
            ;;
        *)
            false
            ;;
    esac
}


##########################################
# Main logic
##########################################
REMOTE=$1
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

## set remote to "origin" if its not given
if [ -z "$REMOTE" ]; then
    REMOTE=origin
fi

## checkout master branch
if [ "$CURRENT_BRANCH" != "master" ]; then
    git checkout master >/dev/null
fi

## delete merged branches on remote
merged=$(git branch -r --merged |grep "${REMOTE}/" |grep -v master |grep -v develop|cut -d '/' -f 2-)
echo Are you sure you want to delete branches below on "'${REMOTE}'?"
echo $merged|tr " " "\n"
confirm && git push $REMOTE --delete ${merged[@]}

## delete merged branches on local
merged=$(git branch --merged |grep -v master |grep -v develop)
echo Are you sure you want to delete branches below on "'local'?"
echo $merged|tr " " "\n"
confirm && git branch -d ${merged[@]}

## checkout previous branch
if [ "$CURRENT_BRANCH" != "master" ]; then
    git checkout $CURRENT_BRANCH >/dev/null
fi
