#!/bin/bash

# Git subcommand to delete all merged branches
#
# `git clean-remote <remote="origin">`

REMOTE=$1
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

## set remote to "origin" if its not given
if [ -z "$REMOTE" ]; then
    REMOTE=origin
fi

## checkout master branch
if [ "$CURRENT_BRANCH" != "master" ]; then
    git checkout master >/dev/null
fi

## delete merged branches on remote
for br in $(git branch -r --merged |grep "${REMOTE}/" |grep -v master |grep -v develop|cut -d '/' -f 2-); do
    # TODO: confirm before delete
    git push $REMOTE --delete $br
done

## delete merged branches on local
for br in $(git branch --merged |grep "${REMOTE}/" |grep -v master |grep -v develop); do
    git branch -d $br
done

## checkout previous branch
if [ "$CURRENT_BRANCH" != "master" ]; then
    git checkout $CURRENT_BRANCH >/dev/null
fi
