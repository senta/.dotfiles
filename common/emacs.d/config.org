#+TITLE: Emacs Configuration
#+AUTHOR: Shota Senga
#+EMAIL: shota@senta.me
#+OPTIONS: toc:nil num:nil
#+STARTUP: content

* Boot

Define utility variables for the rest of config.

#+begin_src emacs-lisp
(setq my:is-macos (eq window-system 'ns))
#+end_src


* Package Loader

Use =use-package= to configure packages and always ensure install the packages.

#+begin_src emacs-lisp
(require 'use-package-ensure)
(setq use-package-always-ensure t)
#+end_src

Always compile packages, and use the newest version available.

#+begin_src emacs-lisp
(use-package auto-compile
  :config (auto-compile-on-load-mode))

(setq load-prefer-newer t)
#+end_src

You can try package without isntallation!

#+begin_src emacs-lisp
(use-package try
  :ensure t)
#+end_src


* Apparence

** Window

Run if Emacs runs with =window-system=

#+begin_src emacs-lisp
(when window-system
  ;; hide tool bars
  (scroll-bar-mode -1)
  (tool-bar-mode -1)
  (menu-bar-mode -1)

  ;; enter full screen
  (add-to-list 'default-frame-alist '(fullscreen . maximized))

  ;; frame title
  (setq frame-title-format '(buffer-file-name "%f" ("%b")))

  ;; transparency
  (set-frame-parameter nil 'alpha 95)
  )
#+end_src

** Theme

My theme of choise is =doom-dracula= which looks better with high contrast compare to dracula original one.

#+begin_src emacs-lisp
(use-package doom-themes
  :custom
  (doom-themes-enable-italic t)
  (doom-themes-enable-bold t)
  :config
  (load-theme 'doom-dracula t)
  (doom-themes-org-config))
#+end_src

** Small adjustments

Show symbols to indicate empty lines

#+begin_src emacs-lisp
(toggle-indicate-empty-lines)
#+end_src



* Global Interface

** Key helper

=which-key= shows keybindings that follows your input.

#+begin_src emacs-lisp
(use-package which-key
  :ensure t
  :config
  (setq which-key-idle-delay 0.4)
  (which-key-mode))
#+end_src


* File Management


* Project Management


* Programming


* Programming Languages

** Python

** C/C++

** Web (HTML, CSS, JavaScript)

** PHP

** Lisp

** Ruby

** Go

** Rust


* org

** Install

Install org from elpa

#+begin_src emacs-lisp
(use-package org
  :ensure org-plus-contrib)
#+end_src


** Display Preference

Pretty style for bullets with =org-bullets==

#+begin_src emacs-lisp
(use-package org-bullets
  :hook (org-mode . (lambda () (org-bullets-mode t))))
#+end_src

Enable =org-indent-mode= globally to show virtual indentations.

#+begin_src emacs-lisp
(setq org-startup-indented t)
#+end_src

Turn on wordwarp.

#+begin_src emacs-lisp
(add-hook 'org-mode-hook #'visual-line-mode)
#+end_src


** Code Block

Use current window for the src editing.

#+begin_src emacs-lisp
(setq org-src-window-setup 'current-window)
#+end_src

Prefer no indentation in the =src= block.

#+begin_src emacs-lisp
(setq org-edit-src-content-indentation 0)
#+end_src

=[TAB]= should works as same as the language specific mode.

#+begin_src emacs-lisp
(setq org-src-tab-acts-natively t)
#+end_src

Load babel languages for the languages I use often. In default, only =emacs-lisp= is loaded. The available languages are listed on [[https://orgmode.org/manual/Languages.html][here]].

#+begin_src emacs-lisp
(org-babel-do-load-languages
 'org-babel-load-languages
 '((js . t)
   (python . t)))
#+end_src

Do not ask me to confirm evaluation for any languages.

#+begin_src emacs-lisp
(setq org-confirm-babel-evaluate nil)
#+end_src

Default JS template has a problem to run on newer version of =Node.js=. To fix it, replace the template code. /I've only checked on v12.10.0/

#+begin_src emacs-lisp
(setq org-babel-js-function-wrapper
      "process.stdout.write(
  require('util').inspect((() => {
    %s
  })(), { depth: null, compact: true })
)")
#+end_src

Set default options for =Python= evaluation. It' much more intuitive, to me.

#+begin_src emacs-lisp
(add-to-list 'org-babel-default-header-args:python
             '(:results . "output"))
#+end_src

Add structure templates for languages which frequently used.

#+begin_src emacs-lisp
(add-to-list 'org-structure-template-alist
             '("el" . "src emacs-lisp"))
(add-to-list 'org-structure-template-alist
             '("py" . "src python"))
(add-to-list 'org-structure-template-alist
             '("js" . "src js"))
#+end_src

*** TODO add ob-restclient if I find useful

see https://github.com/danielmai/.emacs.d/blob/master/config.org#org-babel-languages


** Task Management

Track when a TODO was maked as =DONE=.

#+begin_src emacs-lisp
(setq org-log-done t)
#+end_src



** Export

Use =ox-hugo= as a exportar for Markdown. (You can use ~org-blackfriday-export-as-markdown~ for plain markdown exportation without front-matter.) For the other format, =pandoc= does a grate job!

#+begin_src emacs-lisp
;; (require 'ox-md)
(use-package ox-hugo :after ox)
(use-package ox-pandoc :after ox :disabled)
#+end_src


** Misc

Enable alphabetical lists.

#+begin_src emacs-lisp
(setq org-list-allow-alphabetical t)
#+end_src


** Capture

TBD


* Links

- https://github.com/hrs/dotfiles/blob/master/emacs/.emacs.d/configuration.org
- https://github.com/danielmai/.emacs.d/blob/master/config.org
- https://github.com/sachac/.emacs.d/blob/gh-pages/Sacha.org
- https://ladicle.com/post/config/
